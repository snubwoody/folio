name: Release
env:
  CARGO_TERM_COLOR: always
  DATABASE_URL: sqlite://data.db
on:
  workflow_dispatch:
concurrency:
  group: ci-${{github.ref}}-${{github.workflow}}
  cancel-in-progress: true
jobs:
  build:
    strategy:
      fail-fast: false
      
      matrix:
        include:
          - os: windows-latest
            formats: nsis
          - os: macos-latest
            formats: dmg
          - os: ubuntu-latest
            formats: deb,pacman
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false
      - uses: actions/setup-node@v6
        with:
          node-version: 24
          cache: pnpm
      - uses: actions/cache@v4
        name: Cache rust
        with:
          key: rust-cache-${{runner.os}}-${{hashFiles('**/Cargo.lock')}}
          restore-keys: |
            rust-cache-${{runner.os}}-
            rust-cache-
          path: |
            target/
            ~/.cargo
      - uses: actions/cache@v4
        id: cache-sqlx
        with:
          key: cargo-sqlx-cache-${{runner.os}} # Permanenly cache sqlx
          path: ~/.cargo/bin
      - uses: actions/cache@v4
        id: cache-cargo-bin
        name: Cache cargo binaries
        with:
          key: cargo-cargo-bin-cache-${{runner.os}}
          path: ~/.cargo/bin
      - uses: taiki-e/install-action@nextest
      - name: Install sqlx-cli
        if: ${{steps.cache-sqlx.outputs.cache-hit != 'true'}}
        run: cargo install sqlx-cli
      - name: Install cargo packager
        if: ${{steps.cache-cargo-bin.outputs.cache-hit != 'true'}}
        run: cargo install cargo-packager --locked
      - name: Setup database
        run: |
          cd packages/desktop/src-tauri
          cargo sqlx database create
          cargo sqlx migrate run
      - name: Install system dependencies
        if: ${{runner.os == 'Linux'}}
        run: |
          sudo apt update
          sudo apt install libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libxdo-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev
      - run: pnpm install --frozen-lockfile
      - name: Build app
        run: |
          cd packages/desktop/src-tauri
          pnpm --filter @folio/desktop build
          cargo build --release
      - name: Bundle
        run: |
          cd packages/desktop/src-tauri
          cargo packager --release --formats ${{matrix.formats}}
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: folio-upload-${{ matrix.os }}
          path: |
            packages/desktop/src-tauri/target/release/**/*.deb
            packages/desktop/src-tauri/target/release/**/*.rpm
            packages/desktop/src-tauri/target/release/**/*.PKGBUILD
            packages/desktop/src-tauri/target/release/**/*.msi
            packages/desktop/src-tauri/target/release/**/*-setup.exe
            packages/desktop/src-tauri/target/release/**/*.dmg
            packages/desktop/src-tauri/target/release/**/*.tar.gz
  release:
    permissions:
      contents: write
    needs: build
    runs-on: macos-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: folio-upload-*
          merge-multiple: true
          path: packages/desktop/src-tauri/target/release/
      - name: Create draft release
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          gh release create ${{ github.ref_name }} \
            --draft \
            packages/desktop/src-tauri/target/release/**/*

