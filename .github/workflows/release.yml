name: Release
env:
  DATABASE_URL: sqlite://data.db
  CARGO_TERM_COLOR: always
on:
  pull_request:
    branches: ["main"]
  push: 
    branches: ["main"]
concurrency:
  group: ci-${{github.ref}}-${{github.workflow}}
  cancel-in-progress: true
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest,macos-latest,ubuntu-latest]
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          key: rust-cache-${{runner.os}}-${{hashFiles('**/Cargo.lock')}}
          restore-keys: |
            rust-cache-${{runner.os}}-
            rust-cache-
          path: |
            target/
            ~/.cargo
      - uses: actions/cache@v4
        id: cache-sqlx
        with:
          key: cargo-sqlx-cache-${{runner.os}} # Permanenly cache sqlx
          path: ~/.cargo/bin
      - uses: taiki-e/install-action@nextest
      - name: Install sqlx-cli
        if: ${{steps.cache-sqlx.outputs.cache-hit != 'true'}}
        run: cargo install sqlx-cli
      - name: Setup database
        run: |
          cd src-tauri
          cargo sqlx database create
          cargo sqlx migrate run
      - name: Install system dependencies
        if: ${{runner.os == 'Linux'}}
        run: |
          sudo apt update
          sudo apt install libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libxdo-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev
      - name: Run tests
        run: |
          cd src-tauri
          cargo tauri build
