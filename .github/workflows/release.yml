name: Release
env:
  CARGO_TERM_COLOR: always
  DATABASE_URL: sqlite://data.db
on:
  pull_request:
    branches: ["main"]
  push: 
    branches: ["main"]
concurrency:
  group: ci-${{github.ref}}-${{github.workflow}}
  cancel-in-progress: true
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest,macos-latest,ubuntu-22.04]
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false
      - uses: actions/setup-node@v6
        with:
          node-version: 24
          cache: pnpm
      - uses: actions/cache@v4
        with:
          key: rust-cache-${{runner.os}}-${{hashFiles('**/Cargo.lock')}}
          restore-keys: |
            rust-cache-${{runner.os}}-
            rust-cache-
          path: |
            target/
            ~/.cargo
      - uses: actions/cache@v4
        id: cache-sqlx
        with:
          key: cargo-sqlx-cache-${{runner.os}} # Permanenly cache sqlx
          path: ~/.cargo/bin
      - uses: taiki-e/install-action@nextest
      - name: Install sqlx-cli
        if: ${{steps.cache-sqlx.outputs.cache-hit != 'true'}}
        run: cargo install sqlx-cli
      - name: Setup database
        run: |
          cd src-tauri
          cargo sqlx database create
          cargo sqlx migrate run
      - name: Install system dependencies
        if: ${{runner.os == 'Linux'}}
        run: |
          sudo apt update
          sudo apt install libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libxdo-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev
      - run: pnpm install
      - name: Build
        run: pnpm tauri build
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: folio-upload-${{ matrix.os }}
          path: |
            src-tauri/target/release/bundle/**/*.deb
            src-tauri/target/release/bundle/**/*.rpm
            src-tauri/target/release/bundle/**/*.AppImage
            src-tauri/target/release/bundle/**/*.msi
            src-tauri/target/release/bundle/**/*.exe
            src-tauri/target/release/bundle/**/*.dmg
  release:
    permissions:
      contents: write
    needs: build
    runs-on: macos-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: folio-upload-*
          merge-multiple: true
          path: src-tauri/target/release/bundle
      - run: ls -R src-tauri/target/release/bundle
      - name: Create github release
        env:
          GITHUB_TOKEN: ${{github.token}}
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: src-tauri/target/release/bundle/**/*

